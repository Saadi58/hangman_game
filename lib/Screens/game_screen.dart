import 'dart:developer';

import 'package:flutter/material.dart';
import 'package:hangman_game/utilit/game.dart';
import 'package:hangman_game/utilit/letters.dart';
import 'package:hangman_game/widget/figureImage.dart';

import '../test.dart';

class GameScreen extends StatefulWidget {
  const GameScreen({Key? key}) : super(key: key);

  @override
  State<GameScreen> createState() => _GameScreenState();
}

class _GameScreenState extends State<GameScreen> {
  var words = randomChoice([
    'Ability',
    'Absence',
    'Academy',
    'Account',
    'Accused',
    'Achieve',
    'Acquire',
    'Address',
    'Advance',
    'Adverse',
    'Advised',
    'Adviser',
    'Against',
    'Airline',
    'Airport',
    'Alcohol',
    'Alleged',
    'Already',
    'Analyst',
    'Ancient',
    'Another',
    'Anxiety',
    'Anxious',
    'Anybody',
    'Applied',
    'Arrange',
    'Arrival',
    'Article',
    'Assault',
    'Assumed',
    'Assured',
    'Attempt',
    'Attract',
    'Auction',
    'Average',
    'Backing',
    'Balance',
    'Banking',
    'Barrier',
    'Battery',
    'Bearing',
    'Beating',
    'Because',
    'Bedroom',
    'Believe',
    'Beneath',
    'Benefit',
    'Besides',
    'Between',
    'Billion',
    'Binding',
    'Brother',
    'Brought',
    'Burning',
    'Cabinet',
    'Caliber',
    'Calling',
    'Capable',
    'Capital',
    'Captain',
    'Caption',
    'Capture',
    'Careful',
    'Carrier',
    'Caution',
    'Ceiling',
    'Central',
    'Centric',
    'Century',
    'Certain',
    'Chamber',
    'Channel',
    'Chapter',
    'Charity',
    'Charlie',
    'Charter',
    'Checked',
    'Chicken',
    'Chronic',
    'Circuit',
    'Classes',
    'Classic',
    'Climate',
    'Closing',
    'Closure',
    'Clothes',
    'Collect',
    'College',
    'Combine',
    'Comfort',
    'Command',
    'Comment',
    'Compact',
    'Company',
    'Compare',
    'Compete',
    'Complex',
    'Concept',
    'Concern',
    'Concert',
    'Conduct',
    'Confirm',
    'Connect',
    'Consent',
    'Consist',
    'Contact',
    'Contain',
    'Content',
    'Contest',
    'Context',
    'Control',
    'Convert',
    'Correct',
    'Council',
    'Counsel',
    'Counter',
    'Country',
    'Crucial',
    'Crystal',
    'Culture',
    'Current',
    'Cutting',
    'Dealing',
    'Decided',
    'Decline',
    'Default',
    'Defence',
    'Deficit',
    'Deliver',
    'Density',
    'Deposit',
    'Desktop',
    'Despite',
    'Destroy',
    'Develop',
    'Devoted',
    'Diamond',
    'Digital',
    'Discuss',
    'Disease',
    'Display',
    'Dispute',
    'Distant',
    'Diverse',
    'Divided',
    'Drawing',
    'Driving',
    'Dynamic',
    'Eastern',
    'Economy',
    'Edition',
    'Elderly',
    'Element',
    'Engaged',
    'Enhance',
    'Essence',
    'Evening',
    'Evident',
    'Exactly',
    'Examine',
    'Example',
    'Excited',
    'Exclude',
    'Exhibit',
    'Expense',
    'Explain',
    'Explore',
    'Express',
    'Extreme',
    'Factory',
    'Faculty',
    'Failing',
    'Failure',
    'Fashion',
    'Feature',
    'Federal',
    'Feeling',
    'Fiction',
    'Fifteen',
    'Filling',
    'Finance',
    'Finding',
    'Fishing',
    'Fitness',
    'Foreign',
    'Forever',
    'Formula',
    'Fortune',
    'Forward',
    'Founder',
    'Freedom',
    'Further',
    'Gallery',
    'Gateway',
    'General',
    'Genetic',
    'Genuine',
    'Gigabit',
    'Greater',
    'Hanging',
    'Heading',
    'Healthy',
    'Hearing',
    'Heavily',
    'Helpful',
    'Helping',
    'Herself',
    'Highway',
    'Himself',
    'History',
    'Holding',
    'Holiday',
    'Housing',
    'However',
    'Hundred',
    'Husband',
    'Illegal',
    'Illness',
    'Imagine',
    'Imaging',
    'Improve',
    'Include',
    'Initial',
    'Inquiry',
    'Insight',
    'Install',
    'Instant',
    'Instead',
    'Intense',
    'Interim',
    'Involve',
    'Jointly',
    'Journal',
    'Journey',
    'Justice',
    'Justify',
    'Keeping',
    'Killing',
    'Kingdom',
    'Kitchen',
    'Knowing',
    'Landing',
    'Largely',
    'Lasting',
    'Leading',
    'Learned',
    'Leisure',
    'Liberal',
    'Liberty',
    'Library',
    'License',
    'Limited',
    'Listing',
    'Logical',
    'Loyalty',
    'Machine',
    'Manager',
    'Married',
    'Massive',
    'Maximum',
    'Meaning',
    'Measure',
    'Medical',
    'Meeting',
    'Mention',
    'Message',
    'Million',
    'Mineral',
    'Minimal',
    'Minimum',
    'Missing',
    'Mission',
    'Mistake',
    'Mixture',
    'Monitor',
    'Monthly',
    'Morning',
    'Musical',
    'Mystery',
    'Natural',
    'Neither',
    'Nervous',
    'Network',
    'Neutral',
    'Notable',
    'Nothing',
    'Nowhere',
    'Nuclear',
    'Nursing',
    'Obvious',
    'Offense',
    'Officer',
    'Ongoing',
    'Opening',
    'Operate',
    'Opinion',
    'Optical',
    'Organic',
    'Outcome',
    'Outdoor',
    'Outlook',
    'Outside',
    'Overall',
    'Pacific',
    'Package',
    'Painted',
    'Parking',
    'Partial',
    'Partner',
    'Passage',
    'Passing',
    'Passion',
    'Passive',
    'Patient',
    'Pattern',
    'Payable',
    'Payment',
    'Penalty',
    'Pending',
    'Pension',
    'Percent',
    'Perfect',
    'Perform',
    'Perhaps',
    'Phoenix',
    'Picking',
    'Picture',
    'Pioneer',
    'Plastic',
    'Pointed',
    'Popular',
    'Portion',
    'Poverty',
    'Precise',
    'Predict',
    'Premier',
    'Premium',
    'Prepare',
    'Present',
    'Prevent',
    'Primary',
    'Printer',
    'Privacy',
    'Private',
    'Problem',
    'Proceed',
    'Process',
    'Produce',
    'Product',
    'Profile',
    'Program',
    'Project',
    'Promise',
    'Promote',
    'Protect',
    'Protein',
    'Protest',
    'Provide',
    'Publish',
    'Purpose',
    'Pushing',
    'Qualify',
    'Quality',
    'Quarter',
    'Radical',
    'Railway',
    'Readily',
    'Reading',
    'Reality',
    'Realize',
    'Receipt',
    'Receive',
    'Recover',
    'Reflect',
    'Regular',
    'Related',
    'Release',
    'Remains',
    'Removal',
    'Removed',
    'Replace',
    'Request',
    'Require',
    'Reserve',
    'Resolve',
    'Respect',
    'Respond',
    'Restore',
    'Retired',
    'Revenue',
    'Reverse',
    'Rollout',
    'Routine',
    'Running',
    'Satisfy',
    'Science',
    'Section',
    'Segment',
    'Serious',
    'Service',
    'Serving',
    'Session',
    'Setting',
    'Seventh',
    'Several',
    'Shortly',
    'Showing',
    'Silence',
    'Silicon',
    'Similar',
    'Sitting',
    'Sixteen',
    'Skilled',
    'Smoking',
    'Society',
    'Somehow',
    'Someone',
    'Speaker',
    'Special',
    'Species',
    'Sponsor',
    'Station',
    'Storage',
    'Strange',
    'Stretch',
    'Student',
    'Studied',
    'Subject',
    'Succeed',
    'Success',
    'Suggest',
    'Summary',
    'Support',
    'Suppose',
    'Supreme',
    'Surface',
    'Surgery',
    'Surplus',
    'Survive',
    'Suspect',
    'Sustain',
    'Teacher',
    'Telecom',
    'Telling',
    'Tension',
    'Theatre',
    'Therapy',
    'Thereby',
    'Thought',
    'Through',
    'Tonight',
    'Totally',
    'Touched',
    'Towards',
    'Traffic',
    'Trouble',
    'Turning',
    'Typical',
    'Uniform',
    'Unknown',
    'Unusual',
    'Upgrade',
    'Upscale',
    'Utility',
    'Variety',
    'Various',
    'Vehicle',
    'Venture',
    'Version',
    'Veteran',
    'Victory',
    'Viewing',
    'Village',
    'Violent',
    'Virtual',
    'Visible',
    'Waiting',
    'Walking',
    'Wanting',
    'Warning',
    'Warrant',
    'Wearing',
    'Weather',
    'Webcast',
    'Website',
    'Wedding',
    'Weekend',
    'Welcome',
    'Welfare',
    'Western',
    'Whereas',
    'Whereby',
    'Whether',
    'Willing',
    'Winning',
    'Without',
    'Witness',
    'Working',
    'Writing',
    'Written'
  ]).toUpperCase();

  String st = 'STRING';

  List<String> alphabets = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
  ];

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        backgroundColor: Colors.white,
        appBar: AppBar(
          centerTitle: true,
          backgroundColor: Colors.transparent,
          elevation: 0,
          title: const Text(
            "Hangman",
            style: TextStyle(
                fontSize: 25,
                fontWeight: FontWeight.bold,
                fontStyle: FontStyle.italic,
                color: Color(0xFF4D489B)),
          ),
          leading: IconButton(
            icon: const Icon(
              Icons.arrow_back,
              color: Color(0xFF4D489B),
            ),
            onPressed: () {
              //passing this to our root
              Navigator.of(context).pop();
            },
          ),
        ),
        body: Column(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Center(
              child: Stack(
                children: [
                  figureImage(Game.tries >= 0, 'assets/0.png'),
                  figureImage(Game.tries >= 1, 'assets/1.png'),
                  figureImage(Game.tries >= 2, 'assets/2.png'),
                  figureImage(Game.tries >= 3, 'assets/3.png'),
                  figureImage(Game.tries >= 4, 'assets/4.png'),
                  figureImage(Game.tries >= 5, 'assets/5.png'),
                  figureImage(Game.tries == 6, 'assets/6.png')
                ],
              ),
            ),
            SizedBox(
              height: 25,
              child: () {
                int length = words.length;
                return Text(
                  'Hint: ${words.characters.first}${('*' * (length - 2))}${words.characters.last}',
                  style: const TextStyle(
                      fontSize: 17, fontWeight: FontWeight.bold),
                );
              }(),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: words
                  .split('')
                  .map((e) => Letter(e.toUpperCase(),
                      !Game.selectedChar.contains(e.toUpperCase())))
                  .toList(),
            ),
            SizedBox(
              width: double.infinity,
              height: 250.0,
              child: GridView.count(
                crossAxisCount: 7,
                mainAxisSpacing: 8.0,
                crossAxisSpacing: 8.0,
                padding: const EdgeInsets.all(8.0),
                children: alphabets.map((e) {
                  return RawMaterialButton(
                      onPressed: Game.selectedChar.contains(e)
                          ? null
                          : () {
                              setState(() {
                                log(e.toString());
                                Game.selectedChar.add(e);
                                print(Game.selectedChar);
                                if (!words
                                    .split('')
                                    .contains(e.toUpperCase())) {
                                  Game.tries++;
                                  if (Game.tries == 7) {
                                    Game.selectedChar.clear();
                                    Game.tries = 0;
                                  }
                                }
                              });
                              List t = [];
                              for (int i = 0; i < words.length; i++) {
                                t.add(words[i]);
                              }
                              if (t == Game.selectedChar) {
                                log('message');
                              }
                            },
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(4.0),
                      ),
                      fillColor: Game.selectedChar.contains(e)
                          ? Colors.black87
                          : Colors.grey,
                      child: Text(
                        e,
                        style: const TextStyle(
                            color: Colors.white,
                            fontSize: 25.0,
                            fontWeight: FontWeight.bold),
                      ));
                }).toList(),
              ),
            ),
            InkWell(
              onTap: () {
                Game.selectedChar.clear();
                Game.tries = 0;
                Navigator.pop(context);
                Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const GameScreen()));
              },
              child: Container(
                height: 40,
                alignment: Alignment.center,
                color: const Color(0xFF4D489B),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: const [
                    Text(
                      'Next',
                      style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.bold,
                          fontSize: 18),
                    ),
                    SizedBox(
                      width: 5,
                    ),
                    Icon(
                      Icons.arrow_forward_rounded,
                      color: Colors.white,
                    )
                  ],
                ),
              ),
            )
          ],
        ),
      ),
    );
  }
}
